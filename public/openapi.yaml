openapi: 3.0.3
info:
  title: Translation Management Service API
  version: 1.0.0
servers:
  - url: /api
paths:
  /auth/register:
    post:
      summary: Register a user and receive a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name: { type: string }
                email: { type: string, format: email }
                password: { type: string, format: password }
      responses:
        '201': { description: Created }
  /auth/login:
    post:
      summary: Login and receive a JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string, format: password }
      responses:
        '200': { description: OK }
  /translations:
    get:
      summary: List/search translations
      parameters:
        - in: query
          name: locale
          schema: { type: string }
        - in: query
          name: key
          schema: { type: string }
        - in: query
          name: content
          schema: { type: string }
        - in: query
          name: tags
          schema: { type: string }
      responses:
        '200': { description: OK }
    post:
      summary: Create translation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [key, locale, value]
              properties:
                key: { type: string }
                locale: { type: string }
                value: { type: string }
                context: { type: object }
                tags: { type: array, items: { type: string } }
      responses:
        '201': { description: Created }
  /translations/{id}:
    get:
      summary: Show translation
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
    put:
      summary: Update translation
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200': { description: OK }
    delete:
      summary: Delete translation
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
  /translations/export:
    get:
      summary: Export translations for a locale as JSON (always updated)
      parameters:
        - in: query
          name: locale
          required: true
          schema: { type: string }
        - in: query
          name: tags
          schema: { type: string, description: comma-separated tag slugs }
      responses:
        '200': { description: OK }

